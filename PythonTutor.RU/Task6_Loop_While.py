# -*- coding: utf-8 -*-
import math
# Задача «Список квадратов»
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, 
в порядке возрастания.
"""

N = int(input())
i = 1
while i**2 <= N:
    print(i**2)
    i += 1

# Задача «Минимальный делитель»
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""

n = int(input())
i = 2
while n % i != 0:
    i += 1
print(i)

# Задача «Степень двойки»
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. 
Выведите показатель степени и саму степень.
Операцией возведения в степень пользоваться нельзя!
"""

n = int(input())
i = 2
nn = 1
while i <= n:
    i *= 2
    nn += 1
print(nn - 1, i // 2)

# Задача «Утренняя пробежка»
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения.
По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.
Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""

x = int(input())
y = int(input())
i = 1
while x < y:
    x *= 1.1
    i += 1
print(i)

# Задача «Длина последовательности»
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести 
количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не 
нужно.
"""

lent = 0
while int(input()) != 0:
    lent += 1
print(lent)

# Задача «Сумма последовательности»
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. В этой и во всех следующих задачах числа, 
следующие за первым нулем, учитывать не нужно.
"""

summ = 0
n = int(input())
while n != 0:
    summ += n
    n = int(input())
print(summ)

# Задача «Среднее значение последовательности»
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

summ = 0
lent = 0
n = int(input())
while n != 0:
    summ += n
    n = int(input())
    lent += 1
print(summ / lent)

# Задача «Максимум последовательности»
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение 
наибольшего элемента последовательности.
"""

max = 0
element = -1
while element != 0:
    element = int(input())
    if element > max:
        max = element
print(max)

# Задача «Индекс максимума последовательности»
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите индекс 
наибольшего элемента последовательности. Если наибольших элементов несколько, выведите индекс первого 
из них. Нумерация элементов начинается с нуля.
"""

max = 0
index_of_max = -1
element = -1
len = 0
while element != 0:
    element = int(input())
    if element > max:
        max = element
        index_of_max = len
    len += 1
print(index_of_max)

# Задача «Количество четных элементов последовательности»
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""

element = int(input())
t = 0
while element != 0:
    if element % 2 == 0:
        t+=1
    element = int(input())
print(t)

# Задача «Количество элементов, которые больше предыдущего»
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, 
сколько элементов этой последовательности больше предыдущего элемента.
"""

element1 = int(input())
t = 0
while element1 != 0:
    element2 = int(input())
    if element1 < element2 :
        t+=1
    element1 = element2
print(t)

# Задача «Второй максимум»
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. Определите 
значение второго по величине элемента в этой последовательности. Гарантируется, что в последовательности 
есть хотя бы два элемента.
"""

first_max = int(input())
second_max = int(input())
if first_max < second_max:
    first_max, second_max = second_max, first_max
element = int(input())
while element != 0:
    if element > first_max:
        second_max, first_max = first_max, element
    elif element > second_max:
        second_max = element
    element = int(input())
print(second_max)

# Задача «Количество элементов, равных максимуму»
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой 
последовательности равны ее наибольшему элементу.
"""

maximum = 0
num_maximal = 0
element = -1
while element != 0:
    element = int(input())
    if element > maximum:
        maximum, num_maximal = element, 1
    elif element == maximum:
        num_maximal += 1
print(num_maximal)

# Задача «Числа Фибоначчи»
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
По данному числу n определите n-е число Фибоначчи φn.
Эту задачу можно решать и циклом for.
"""

n = int(input())
n0 = 0
n1 = 1
i = 0
if n == 0:
    print(n)
else:
    while i < n - 1:
        n2 = n0 + n1
        n0 = n1
        n1 = n2
        i += 1
    print(n1)

# Задача «Номер числа Фибоначчи»
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, 
что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""

a = int(input())
if a == 0:
    print(0)
else:
    fib_prev, fib_next = 0, 1
    n = 1
    while fib_next <= a:
        if fib_next == a:
            print(n)
            break
        fib_prev, fib_next = fib_next, fib_prev + fib_next
        n += 1
    else:
        print(-1)

# Задача «Максимальное число идущих подряд равных элементов»
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите, какое наибольшее число подряд идущих 
элементов этой последовательности равны друг другу.
"""

prev = -1
curr_rep_len = 0
max_rep_len = 0
element = int(input())
while element != 0:
    if prev == element:
        curr_rep_len += 1
    else:
        prev = element
        max_rep_len = max(max_rep_len, curr_rep_len)
        curr_rep_len = 1
    element = int(input())
max_rep_len = max(max_rep_len, curr_rep_len)
print(max_rep_len)

# Задача «Стандартное отклонение»
"""
Дана последовательность натуральных чисел x1, x2, ..., xn. Стандартным отклонением называется величина
σ=(x1−s)2+(x2−s)2+…+(xn−s)2n−1‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾√
где s=x1+x2+…+xnn — среднее арифметическое последовательности.
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""

partial_sum = 0
partial_sum_squares = 0
x_i = int(input())
n = 0
while x_i != 0:
    n += 1
    partial_sum += x_i
    partial_sum_squares += x_i ** 2
    x_i = int(input())
print(sqrt((partial_sum_squares - partial_sum ** 2 / n) / (n - 1)))
